
plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Apply the Shadow plugin
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        url = uri("file:///Users/hinduja/Documents/WSO2_MI/repo")
    }
    mavenLocal()

    maven {
        name = "wso2-nexus"
        url = "https://maven.wso2.org/nexus/content/groups/wso2-public/"
    }

    maven {
        name = "elasticsearch-releases"
        url = "https://artifacts.elastic.co/maven"
    }
    maven {
        url = 'https://maven.pkg.github.com/ballerina-platform/*'
        credentials {
            username System.getenv("packageUser")
            password System.getenv("packagePAT")
        }
    }

    maven {
        name = "oracle"
        url = "https://maven.xwiki.org/externals/"
    }

    maven {
        name = "wso2-m2"
        url = "https://dist.wso2.org/maven2/"
    }
}

dependencies {
    implementation('org.apache.synapse:synapse-core:4.0.0-wso2v119') {
        exclude group: 'javax.jms', module: 'jms'
    }
    implementation "org.apache.ws.commons.axiom.wso2:axiom:${axiomVersion}"
    implementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-parser', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'formatter-core', version: "${ballerinaLangVersion}"
    implementation group: 'org.ballerinalang', name: 'ballerina-tools-api', version: "${ballerinaLangVersion}"
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    // TestNG dependency for testing
    testImplementation 'org.testng:testng:7.10.2'
    implementation 'org.ballerina:ballerina-model-to-code:1.0-SNAPSHOT'
    implementation group: 'org.ballerinalang', name: 'ballerina-test-utils', version: "${ballerinaLangVersion}"
}

test {
    useTestNG()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'io.ballerina.cmd.Main' // Replace with the fully qualified name of your main class
        )
    }
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12' // Example of an older binding to exclude
    exclude group: 'org.slf4j', module: 'slf4j-jdk14'
}

shadowJar {
    archiveClassifier.set('all') // Create a fat JAR with all dependencies
}

tasks.named('build').configure {
    dependsOn tasks.named('shadowJar')
}

tasks.withType(Test).configureEach {
    if (project.hasProperty('debug')) {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005'
        println 'Remote debugging enabled on port 5005. Waiting for debugger to attach...'
    }
}
